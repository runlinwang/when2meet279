{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","schedule","handleChange","newSchedule","OGOld","_this","oldSchedule","newSched","i","length","push","String","getDate","concat","getHours","j","temp","oldGone","filter","item","includes","newIn","k","tdToChange","document","getElementById","textContent","slice","className","lastChild","replace","l","tdToChange1","setState","this","hover","react_default","a","createElement","lib_default","selection","numDays","minTime","maxTime","hourlyChunks","startDate","onChange","border","width","class","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53f91b7f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// using the react tool from https://github.com/andrew200101/react-schedule-selector\nimport ScheduleSelector from 'react-schedule-selector';\n\nclass App extends Component {\n  // schedule contained in the state\n  state = { schedule: [] }\n\n  // this function is called each time that the schedule selector is edited, \n  // and the new schedule is passed in\n  handleChange = newSchedule => {\n\n    // ignore this; testing and debugging code\n    // var bottom = document.getElementById(\"last\");\n    // bottom.textContent = \"\";\n    \n    // get the original old schedule\n    var OGOld = this.state.schedule;\n\n    // new arrays of 3 digit identifiers of the date and hour selected: \"date-hour-hour\"\n    var oldSchedule = [];\n    var newSched = [];\n\n    // incrementing through each of the old schedule times and adding the strings of\n    // \"date-hour-hour\" (three characters) to the array\n    for (let i = 0; i < OGOld.length; i++) {\n      oldSchedule.push(String(OGOld[i].getDate()).concat(String(OGOld[i].getHours())));\n    }\n\n    // incrementing through each of the new schedule times and adding the strings of\n    // \"date-hour-hour\" (three characters) to the array\n    for (let j = 0; j < newSchedule.length; j++) {\n      var temp = String(newSchedule[j].getDate()).concat(String(newSchedule[j].getHours()));\n      // ignore this; testing and debugging code\n      // if (temp.length <= 3) {\n      newSched.push(temp);\n      // }\n    }\n\n    // choosing just the items in the old schedule that have been removed\n    var oldGone = oldSchedule.filter(item => !newSched.includes(item));\n\n    // choosing just the items in the new schedule that have been added\n    var newIn = newSched.filter(item => !oldSchedule.includes(item));\n\n    // incrementing through each of the removed dates to change the cells\n    for (let k = 0; k < oldGone.length; k++) {\n      // get the table cell with the id same as the \"date-hour-hour\" code\n      var tdToChange = document.getElementById(oldGone[k]);\n      \n      // check the final 5 characters to make sure that we haven't already removed this date\n      // the ScheduleSelector tool imported sometimes double counts dates\n      var check1 = tdToChange.textContent.slice(-5);\n      if (check1 !== \", You\") {\n        continue;\n      }\n\n      // change the class of the cell to be one lower, which changes the color\n      if (tdToChange.className === \"two tooltip\") {\n        tdToChange.className = \"one tooltip\";\n      } else if (tdToChange.className === \"three tooltip\") {\n        tdToChange.className = \"two tooltip\";\n      } else if (tdToChange.className === \"four tooltip\") {\n        tdToChange.className = \"three tooltip\";\n      }\n      // delete the last five characters of the span popup, which we checked was \", You\"\n      tdToChange.lastChild.textContent = tdToChange.lastChild.textContent.replace(/.{5}$/g, '');\n    }\n\n    // incrementing through each of the newly added dates to change the cells\n    for (let l = 0; l < newIn.length; l++) {\n      // get the table cell with the id same as the \"date-hour-hour\" code\n      var tdToChange1 = document.getElementById(newIn[l]);\n\n      // check the final 5 characters to make sure that we haven't already added this date\n      // the ScheduleSelector tool imported sometimes double counts dates\n      var check2 = tdToChange1.textContent.slice(-5);\n      if (check2 === \", You\") {\n        continue;\n      }\n\n      // change the class of the cell to be one higher, which changes the color\n      if (tdToChange1.className === \"one tooltip\") {\n        tdToChange1.className = \"two tooltip\";\n      } else if (tdToChange1.className === \"two tooltip\") {\n        tdToChange1.className = \"three tooltip\";\n      } else if (tdToChange1.className === \"three tooltip\") {\n        tdToChange1.className = \"four tooltip\";\n      }\n\n      // add the string \", You\" to the end of the span popup\n      tdToChange1.lastChild.textContent += \", You\";\n    }\n    \n    // update the schedule to the new schedule\n    this.setState({ schedule: newSchedule });\n    \n  }\n  \n  // function to handle setting the state of hover to true\n  handleMouseIn() {\n    this.setState({ hover: true })\n  }\n  \n  // function to handle setting the state of hover to false\n  handleMouseOut() {\n    this.setState({ hover: false })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <title>279 When2Meet Prototype</title>\n        <header className=\"App-header\">\n          <p>\n            CS279R When2Meet User Implementation: Ayana Yaegashi and RunLin Wang\n          </p>\n          <p>\n            Select your availability below!\n          </p>\n          {/* this is the schedule selector tool found online at https://github.com/andrew200101/react-schedule-selector */}\n          <ScheduleSelector\n            selection={this.state.schedule}\n            numDays={5}\n            minTime={13}\n            maxTime={18}\n            hourlyChunks={1}\n            startDate = \"2022-11-01\"\n            onChange={this.handleChange}\n          />\n\n          <p>Here's the availability of the group. Hover over the green boxes to see who's available!</p>\n\n          {/* classes just define the background color of the cell */}\n          <table>\n            <tr>\n              <td border=\"none\">Number of people available</td>\n              <td width=\"10%\">Zero</td>\n              <td class=\"one\" width=\"10%\">One</td>\n              <td class=\"two\" width=\"10%\">Two</td>\n              <td class=\"three\" width=\"10%\">Three</td>\n              <td class=\"four\" width=\"10%\">Four</td>\n            </tr>\n          </table>\n\n<p></p>\n\n          {/* hard coded availabilities of 3 other users, corresponding to the same dates and times as the Schedule Selector */}\n          <table>\n            <tr>\n              <td></td>\n              <td>11/1</td>\n              <td>11/2</td>\n              <td>11/3</td>\n              <td>11/4</td>\n              <td>11/5</td>\n            </tr>\n\n            {/* id is hard coded to correspond to \"date-hour-hour\" code for that position */}\n            {/* tooltip class in css allows for tooltiptext to appear after hovering over it */}\n            <tr>\n              <td>1pm</td>\n              <td id=\"113\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Chad</span></td>\n              <td id=\"213\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Chad</span></td>\n              <td id=\"313\" class=\"two tooltip\"><span class=\"tooltiptext\">Available: Chad, Brad</span></td>\n              <td id=\"413\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n              <td id=\"513\" class=\"two tooltip\"><span class=\"tooltiptext\">Available: Brad, Dad</span></td>\n            </tr>\n            <tr>\n              <td>2pm</td>\n              <td id=\"114\" class=\"two tooltip\"><span class=\"tooltiptext\">Available: Chad, Brad</span></td>\n              <td id=\"214\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Chad</span></td>\n              <td id=\"314\" class=\"two tooltip\"><span class=\"tooltiptext\">Available: Chad, Brad</span></td>\n              <td id=\"414\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n              <td id=\"514\" class=\"three tooltip\"><span class=\"tooltiptext\">Available: Chad, Brad, Dad</span></td>\n            </tr>\n            <tr>\n              <td>3pm</td>\n              <td id=\"115\" class=\"two tooltip\"><span class=\"tooltiptext\">Available: Brad, Dad</span></td>\n              <td id=\"215\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n              <td id=\"315\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n              <td id=\"415\" class=\"three tooltip\"><span class=\"tooltiptext\">Available: Chad, Brad, Dad</span></td>\n              <td id=\"515\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Chad</span></td>\n            </tr>\n            <tr>\n              <td>4pm</td>\n              <td id=\"116\" class=\"two tooltip\"><span class=\"tooltiptext\">Available: Brad, Dad</span></td>\n              <td id=\"216\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n              <td id=\"316\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n              <td id=\"416\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n              <td id=\"516\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n            </tr>\n            <tr>\n              <td>5pm</td>\n              <td id=\"117\" class=\"two tooltip\"><span class=\"tooltiptext\">Available: Chad, Brad</span></td>\n              <td id=\"217\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Chad</span></td>\n              <td id=\"317\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Brad</span></td>\n              <td id=\"417\" class=\"two tooltip\"><span class=\"tooltiptext\">Available: Chad, Brad</span></td>\n              <td id=\"517\" class=\"one tooltip\"><span class=\"tooltiptext\">Available: Chad</span></td>\n            </tr>\n          </table>\n\n        </header>\n        {/* debugging code */}\n        {/* <p id=\"last\">Here: </p> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}